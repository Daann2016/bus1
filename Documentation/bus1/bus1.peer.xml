<?xml version='1.0'?> <!--*-nxml-*-->
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
        "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<refentry id="bus1.peer">

  <refentryinfo>
    <title>bus1.peer</title>
    <productname>bus1</productname>
  </refentryinfo>

  <refmeta>
    <refentrytitle>bus1.peer</refentrytitle>
    <manvolnum>7</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>bus1.peer</refname>
    <refpurpose>Bus Peer</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
    </para>
  </refsect1>

  <refsect1>
    <title>Creating a new peer</title>
    <para>
      A new peer can be created by calling
      <citerefentry>
        <refentrytitle>open</refentrytitle>
        <manvolnum>2</manvolnum>
      </citerefentry>
      on <filename>/dev/bus1</filename>. The returned file-descriptor represents
      a new peer disconnected from all existing peers.
    </para>
  </refsect1>

  <refsect1>
    <title>Cloning an existing peer</title>
    <para>
      A new peer can be created from an existing one by calling the
      <constant>BUS1_CMD_PEER_CLONE</constant> ioctl on a file-descriptor
      representing the existing peer. A handle from the parent is passed in and
      installed in the child. The ioctl takes a
      <type>struct bus1_cmd_peer_clone</type> struct as argument.
    </para>

    <programlisting>
struct bus1_cmd_peer_clone {
  __u64 flags;
  __u64 parent_handle;
  __u64 child_handle;
  __u64 fd;
};
    </programlisting>

    <para>The fields in this structure are described below</para>

    <variablelist>
      <varlistentry>
        <term><varname>flags</varname></term>
        <listitem><para>
          Flags to apply to the new peer. This must be set to
          <constant>0</constant>.
        </para></listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>parent_handle</varname></term>
        <listitem><para>
          A handle from the parent peer to be passed to the child.
        </para></listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>child_handle</varname></term>
        <listitem><para>
          The handle installed in the new peer. This must be set to
          <constant>BUS1_HANDLE_INVALID</constant> and is set to the new handle
          on return.
        </para></listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>fd</varname></term>
        <listitem><para>
          The file-descriptor representing the new peer. This must be set to
          <constant>-1</constant> and is set to the new file-descriptor on
          return.
        </para></listitem>
      </varlistentry>

    </variablelist>
  </refsect1>
  <refsect1>
    <title>Resetting a peer</title>
    <para>
      An existing peer can be reset to a pristine state by calling the
      <constant>BUS1_CMD_PEER_RESET</constant> ioctl. All slices are
      simultaneously destroyed, all messages up-to and including each of the
      node destruction notification messages are discarded and all user
      references to slices and handles are released. The ioctl takes a
      <type>struct bus1_cmd_peer_reset</type> struct as argument.
    </para>

    <programlisting>
struct bus1_cmd_peer_reset {
  __u64 flags;
};
    </programlisting>

    <para>The fields in this structure are described below</para>

    <variablelist>
      <varlistentry>
        <term><varname>flags</varname></term>
        <listitem><para>
          Flags to apply to this peer. This must be set to
          <constant>0</constant>.
        </para></listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Return value</title>
    <para>
      On success, all mentioned ioctl commands return <errorcode>0</errorcode>;
      on error, <errorcode>-1</errorcode> is returned, and
      <varname>errno</varname> is set to indicate the error. See
      <citerefentry>
        <refentrytitle>bus1</refentrytitle>
        <manvolnum>7</manvolnum>
      </citerefentry>
      for a list of possible error codes.
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <citerefentry>
          <refentrytitle>bus1</refentrytitle>
          <manvolnum>7</manvolnum>
        </citerefentry>
      </member>
      <member>
        <citerefentry>
          <refentrytitle>bus1.node</refentrytitle>
          <manvolnum>7</manvolnum>
        </citerefentry>
      </member>
      <member>
        <citerefentry>
          <refentrytitle>bus1.message</refentrytitle>
          <manvolnum>7</manvolnum>
        </citerefentry>
      </member>
    </simplelist>
  </refsect1>
</refentry>
